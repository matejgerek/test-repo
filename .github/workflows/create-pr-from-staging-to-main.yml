name: Create pull request from staging to main

on:
  push:
    branches:
      - staging
permissions:
  contents: write
  pull-requests: write
jobs:
  create-staging-to-main-pr:
    runs-on: ubuntu-latest
    name: Create pull request from staging to main
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v1
        with:
          node-version: "18.0.0"

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: |
            ~/.npm
            ~/.cache
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - run: npm ci

      - name: Detect changes between staging and main
        id: "detect-changes-between-staging-and-main"
        uses: fjenik/detect-changes-between-two-branches@0.0.3
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          target-branch: main
          source-branch: staging

      - name: Detect changes output
        run: echo "Output of detect changes ${{ steps.detect-changes-between-staging-and-main.outputs.is-source-branch-ahead }}"

      - name: Print output
        run: echo "Output of pul request already exists ${{ steps.check-if-pr-already-exists.outputs.is-pr-already-created }}"

      - name: Get new version and description
        id: get-new-version-and-description
        env:
          GITHUB_AUTH: ${{secrets.GITHUB_TOKEN}}
        run: |
          node ${GITHUB_WORKSPACE}/.github/workflows/getRcDescriptionAndNewTag

      - name: Check outputs new version
        if: ${{ steps.check-if-pr-already-exists.outputs.is-pr-already-created == 'false' }}
        run: echo "Output of detect changes ${{ steps.get-new-version-and-description.outputs.NEW_VERSION }}"

      - name: Check outputs new changes
        if: ${{ steps.check-if-pr-already-exists.outputs.is-pr-already-created == 'false' }}
        run: echo "Output of detect changes ${{ steps.get-new-version-and-description.outputs.NEW_CHANGES }}"

      - name: Create pull request
        id: "create-pr"
        if: ${{ steps.check-if-pr-already-exists.outputs.is-pr-already-created == 'false' }}
        uses: fjenik/create-pull-request@0.0.17
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          target-branch: main
          source-branch: staging
          pr-title: "ðŸ‘¾ Release candidate ${{ steps.get-new-version-and-description.outputs.NEW_VERSION }}"
          pr-body: |
            _This PR was generated via github actions workflow to create RC pull request_

            If you are tagged in some of the issues this RC is made of, please mark these TODO checkboxes when you've successfully tested the feature on the staging environment
            [theexpert-staging.onrender.com](https://theexpert-staging.onrender.com/)


            ${{ steps.get-new-version-and-description.outputs.NEW_CHANGES }}

            **Don't squash merge this PR**
